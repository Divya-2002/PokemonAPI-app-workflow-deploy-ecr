name: Deploy to ECR

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build Image and Update Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: pokemon-img-ecr
          IMAGE_TAG: ${{ github.sha }} # You can set this to the tag you want to use or retrieve dynamically
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Get latest ECR image tag
        id: get-latest-tag
        run: |
          IMAGE_TAG=$(aws ecr describe-images --repository-name pokemon-img-ecr --query 'sort_by(imageDetails,& imagePushedAt)[*].[imageTags]' --output text | tail -n 1)
          echo "::set-output name=latest_tag::$IMAGE_TAG"

      - name: Set new image in the Cluster
        run: |
          aws eks --region ap-south-1 update-kubeconfig --name git-cluster
          IMAGE_TAG=$(echo "${{ steps.get-latest-tag.outputs.latest_tag }}")
          ECR_REGISTRY="${{ steps.login-ecr.outputs.registry }}"
          ECR_REPOSITORY="pokemon-img-ecr"
          kubectl set image deployment/my-app my-app=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
